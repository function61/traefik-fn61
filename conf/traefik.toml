
defaultEntryPoints = ["public_http", "public_https"]

[accessLog]
filePath = "/dev/stdout"

[metrics]
  [metrics.prometheus]
    entryPoint = "traefik"
    buckets = [0.1,0.3,1.2,5.0]

# admin/debug UI
[api]
  entryPoint = "traefik"
  dashboard = true

# entrypoints are basically TCP ports which the dynamic frontends will attach to
[entryPoints]
  [entryPoints.public_http]
  address = ":80"

  [entryPoints.public_https]
  address = ":443"
    [entryPoints.public_https.tls]
      [[entryPoints.public_https.tls.certificates]]
      CertFile = "/etc/traefik/ssl_certs/public_https.crt"
      KeyFile = "/etc/traefik/ssl_certs/public_https.key"

  [entryPoints.backoffice]
  address = ":9001"
    [entryPoints.backoffice.tls]
    clientCAFiles = ["/etc/traefik/ssl_certs/ca.crt"]
      [[entryPoints.backoffice.tls.certificates]]
      CertFile = "/etc/traefik/ssl_certs/public_https.crt"
      KeyFile = "/etc/traefik/ssl_certs/public_https.key"

  # admin API + Traefik admin dashboard + Prometheus metrics
  [entryPoints.traefik]
  address = ":8081"

[docker]
  endpoint = "https://dockersockproxy:4431"

  # we're always explicitly defining the frontend rule, so we don't need default domain
  domain = ".invalid"

  # pick up updates
  watch = true

  # use Docker Swarm API to list tasks (= cluster-wide) instead of containers (= host-specific)
  swarmmode = true

  # require traefik.enable=True
  exposedByDefault = false

  # without this the admin dashboard didn't work properly
  # (it kept having another IP address?)
  network = "fn61"

  [docker.tls]
  ca = "/etc/traefik/ssl_certs/ca.crt"
  cert = "/etc/traefik/ssl_certs/public_https.crt"
  key = "/etc/traefik/ssl_certs/public_https.key"
  insecureSkipVerify = true
